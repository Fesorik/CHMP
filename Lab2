import numpy as np
import math
import matplotlib.pyplot as plt
def f(x):
    return 6*x**4-4*x**3-x**2+x-7
a = 1/2
b = 2
eps = 0.001 #точність
def rec_dyhotomy(a, b, eps):
    if abs(f(b) - f(a)) < eps:
        print('Кореня немає')
        return
    mid = (a+b) / 2
    if f(mid) == 0 or abs(f(mid)) < eps:
        print(f'Корінь знаходиться в точці x = {mid}')
    elif f(a)*f(mid) < 0:
        rec_dyhotomy(a, mid, eps)
    else:
        rec_dyhotomy(mid, b, eps)
rec_dyhotomy(a, b, eps)
x = np.arange(math.sqrt(3)/6., 1., 0.01)
plt.plot(x, f(x))
plt.xlabel('x')
plt.ylabel('f(x)')
plt.title('Метод ділення навпіл')
plt.grid()
plt.show()

3.Метод хорд
import numpy as np
import math
from scipy.misc import derivative
def f(x):
    return 6*pow(x,4) - 4*pow(x,3) - pow(x,2) + x - 7
a = -3
b = -1/2

eps = 0.001 #точність
def hord (a, b, eps):
    if abs(b - a) < eps:
        print('Кореня немає')
        return
    if (f(a)*derivative(f, a, n = 2)):
        x0 = a
        xi = b
    else:
        x0 = b
        xi = a
    xi_1 = xi-(xi - x0) * f(xi)/(f(xi) - f(x0))
    while (abs(xi_1 - xi) > eps):
        xi = xi_1
        xi_1 = xi-(xi - x0) * f(xi)/(f(xi) - f(x0))     
    else:
        print(f'Метод хорд.Корінь знаходиться в точці x =', xi_1)
hord(a,b,eps)
